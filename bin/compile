#!/usr/bin/env bash
# Usage: bin/compile <build-dir> <cache-dir> <env-dir>
# See: https://devcenter.heroku.com/articles/buildpack-api

set -euo pipefail

BUILD_DIR="${1}"
CACHE_DIR="${2}"
ENV_DIR="${3}"

# The absolute path to the root of the buildpack.
BUILDPACK_DIR=$(cd "$(dirname "$(dirname "${BASH_SOURCE[0]}")")" && pwd)

cd "$BUILD_DIR"

export CNB_BUILDPACK_DIR="${BUILDPACK_DIR}/cnb"
export CNB_TARGET_OS="linux"
export CNB_TARGET_ARCH="amd64"
export CNB_TARGET_DISTRO_NAME="ubuntu"
export CNB_TARGET_DISTRO_VERSION="24.04"

export CNB_BUILD_DIR="${BUILD_DIR}/.cnb"
mkdir $CNB_BUILD_DIR
touch $CNB_BUILD_DIR/buildpack_plan.toml
mkdir $CNB_BUILD_DIR/layers
mkdir $CNB_BUILD_DIR/platform

$CNB_BUILDPACK_DIR/bin/build "$CNB_BUILD_DIR/layers" "$CNB_BUILD_DIR/platform" "$CNB_BUILD_DIR/buildpack_plan.toml"

# Function to handle variable operations (roughly) based on CNB buildpacks spec
process_env_file() {
    local env_file="$1"
    local var_name=$(basename "$env_file" | cut -d '.' -f 1) # Get the variable name (before the first dot)
    local operation=$(basename "$env_file" | cut -d '.' -f 2) # Get the operation (after the first dot)

    if [[ "$var_name" == "PATH" ]]; then
        case "$operation" in
            "override")
                echo "export PATH=\"$(cat "$env_file")\""
                ;;
            "prepend")
                echo "export PATH=\"$(cat "$env_file"):\$PATH\""
                ;;
            "append")
                echo "export PATH=\"\$PATH:$(cat "$env_file")\""
                ;;
        esac
    else
        case "$operation" in
            "override")
                echo "export $var_name=\"$(cat "$env_file")\""
                ;;
            "prepend")
                echo "export $var_name=\"$(cat "$env_file"):\$$var_name\""
                ;;
            "append")
                echo "export $var_name=\"\$$var_name:$(cat "$env_file")\""
                ;;
        esac
    fi
}

PROFILE_PATH="$BUILD_DIR/.profile.d/dotnet.sh"

# Create the profile directory if it doesn't exist
mkdir -p "$(dirname "$PROFILE_PATH")"

# Recursively find and process files in env and env.launch layer directories
find "$CNB_BUILD_DIR/layers" -type f \( -path "*/env/*" -o -path "*/env.launch/*" \) | while read -r file; do
    process_env_file "$file" >> "$PROFILE_PATH"
done

# Hack to replace the temp build directory path in environment variables
sed -i "s|$BUILD_DIR|/app|g" $PROFILE_PATH

# Hack to reduce slug size for now
rm -rf $CNB_BUILD_DIR/layers/sdk
rm -rf $CNB_BUILD_DIR/layers/nuget-cache
rm $CNB_BUILD_DIR/layers/sdk.toml
rm $CNB_BUILD_DIR/layers/nuget-cache.toml
